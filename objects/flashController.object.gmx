<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spriteFlashController</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>-1</persistent>
  <parentName>controller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

active         = false;
alpha          = 1;
dark           = false;
darkFactor     = 0.1;
dashDark       = false;
dashDarkFactor = 0.1;
fadeOut        = false;
fadeFactor     = 0;
fadeSpeed      = 1;

eventRegister(allEvents.fadeout, id, scriptFadeOut);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (dark &amp;&amp; darkFactor &lt; MAX_DARK_FACTOR) {
    darkFactor += 0.01 * customDeltaTime;
}

if (dashDark &amp;&amp; dashDarkFactor &lt; MAX_DASH_DARK_FACTOR) {
    dashDarkFactor += 0.2 * customDeltaTimeNoTimeFactor;
} else if (!dashDark &amp;&amp; dashDarkFactor &gt; 0.1) {
    dashDarkFactor -= 0.2 * customDeltaTimeNoTimeFactor;
}

if (active) {
    alpha -= 0.01 * customDeltaTime;
    if (alpha &lt;= 0) {
        active   = false;
        alpha    = 1;
        draw_set_alpha(1);
    }
}

if (fadeOut &amp;&amp; fadeFactor &lt; 255) {
    fadeFactor += fadeSpeed * customDeltaTime;
    fadeFactor = min(fadeFactor, 255);
}

if (round(fadeFactor) &gt;= 254) {
    eventFire(allEvents.theend);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (dark) {
    draw_set_blend_mode(bm_subtract);
    var colour = darkFactor * 20;
    draw_set_colour(make_colour_rgb(colour, colour, colour));
    draw_rectangle(view_xview[0], view_yview[0], view_xview[0] + view_wview[0], view_yview[0] + view_hview[0], false);
    draw_set_blend_mode(bm_normal);
}

if (dashDark || dashDarkFactor &gt; 0.1) {
    draw_set_blend_mode(bm_subtract);
    var colour = dashDarkFactor * 20;
    draw_set_colour(make_colour_rgb(colour, colour, colour));
    draw_rectangle(view_xview[0], view_yview[0], view_xview[0] + view_wview[0], view_yview[0] + view_hview[0], false);
    draw_set_blend_mode(bm_normal);
}

if (active) {
    draw_set_colour(c_white);
    draw_set_alpha(alpha);
    draw_rectangle(view_xview[0], view_yview[0], view_xview[0] + view_wview[0], view_yview[0] + view_hview[0], false);
    draw_set_alpha(1);
}

if (fadeOut) {
    draw_set_blend_mode(bm_subtract);
    draw_set_colour(make_colour_rgb(fadeFactor, fadeFactor, fadeFactor));
    draw_rectangle(view_xview[0], view_yview[0], view_xview[0] + display_get_gui_width(), view_yview[0] + display_get_gui_height(), false);
    draw_set_blend_mode(bm_normal);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
