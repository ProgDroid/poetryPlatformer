<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spriteSettingsController</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>controller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create binds

// will probably need to save this so think about json encoding
// possibly an array per action here
// e.g. jump = [ord('W'), noone, gamepad_axis_value(gamepadConnected, gp_axislv)];
keybinds = loadJson("settings\keybinds.json");

if (keybinds == noone) {
    playerUp     = ds_list_create();
    ds_list_add(playerUp, ord('W'), vk_up, gp_padu, gp_axislv);

    playerDown   = ds_list_create();
    ds_list_add(playerDown, ord('S'), vk_down, gp_padd, gp_axislv);

    playerLeft   = ds_list_create();
    ds_list_add(playerLeft, ord('A'), vk_left, gp_padl, gp_axislh);

    playerRight  = ds_list_create();
    ds_list_add(playerRight, ord('D'), vk_right, gp_padr, gp_axislh);

    jump         = ds_list_create();
    ds_list_add(jump, vk_space, noone, gp_face1, noone);

    dash         = ds_list_create();
    ds_list_add(dash, vk_shift, noone, gp_shoulderl, noone);

    dashConfirm  = ds_list_create();
    ds_list_add(dashConfirm, vk_space, noone, gp_shoulderr, noone);

    start        = ds_list_create();
    ds_list_add(start, vk_escape, noone, gp_start, noone);

    menuUp       = ds_list_create();
    ds_list_add(menuUp, ord('W'), vk_up, gp_padu, gp_axislv);

    menuDown     = ds_list_create();
    ds_list_add(menuDown, ord('S'), vk_down, gp_padd, gp_axislv);

    menuLeft     = ds_list_create();
    ds_list_add(menuLeft, ord('A'), vk_left, gp_padl, gp_axislh);

    menuRight    = ds_list_create();
    ds_list_add(menuRight, ord('D'), vk_right, gp_padr, gp_axislh);

    accept       = ds_list_create();
    ds_list_add(accept, vk_space, vk_enter, gp_face1, noone);

    back         = ds_list_create();
    ds_list_add(back, vk_escape, vk_backspace, gp_face2, noone);

    cameraUp     = ds_list_create();
    ds_list_add(cameraUp, ord('I'), noone, gp_axisrv, noone);

    cameraDown   = ds_list_create();
    ds_list_add(cameraDown, ord('K'), noone, gp_axisrv, noone);

    cameraLeft   = ds_list_create();
    ds_list_add(cameraLeft, ord('J'), noone, gp_axisrh, noone);

    cameraRight  = ds_list_create();
    ds_list_add(cameraRight, ord('L'), noone, gp_axisrh, noone);

    dashAimUp    = ds_list_create();
    ds_list_add(cameraUp, noone, noone, gp_axisrv, noone);

    dashAimDown  = ds_list_create();
    ds_list_add(cameraDown, noone, noone, gp_axisrv, noone);

    dashAimLeft  = ds_list_create();
    ds_list_add(cameraLeft, noone, noone, gp_axisrh, noone);

    dashAimRight = ds_list_create();
    ds_list_add(cameraRight, noone, noone, gp_axisrh, noone);

    keybinds    = ds_map_create();
    ds_map_add_list(keybinds, "playerUp", playerUp);
    ds_map_add_list(keybinds, "playerDown", playerDown);
    ds_map_add_list(keybinds, "playerLeft", playerLeft);
    ds_map_add_list(keybinds, "playerRight", playerRight);
    ds_map_add_list(keybinds, "jump", jump);
    ds_map_add_list(keybinds, "dash", dash);
    ds_map_add_list(keybinds, "dashConfirm", dashConfirm);
    ds_map_add_list(keybinds, "start", start);
    ds_map_add_list(keybinds, "menuUp", menuUp);
    ds_map_add_list(keybinds, "menuDown", menuDown);
    ds_map_add_list(keybinds, "menuLeft", menuLeft);
    ds_map_add_list(keybinds, "menuRight", menuRight);
    ds_map_add_list(keybinds, "accept", accept);
    ds_map_add_list(keybinds, "back", back);
    ds_map_add_list(keybinds, "cameraUp", cameraUp);
    ds_map_add_list(keybinds, "cameraDown", cameraDown);
    ds_map_add_list(keybinds, "cameraLeft", cameraLeft);
    ds_map_add_list(keybinds, "cameraRight", cameraRight);
    ds_map_add_list(keybinds, "dashAimUp", dashAimUp);
    ds_map_add_list(keybinds, "dashAimDown", dashAimDown);
    ds_map_add_list(keybinds, "dashAimLeft", dashAimLeft);
    ds_map_add_list(keybinds, "dashAimRight", dashAimRight);

    ds_map_add(keybinds, "deadzone", CONTROLLER_DEADZONE);
    ds_map_add(keybinds, "buttonThreshold", CONTROLLER_BUTTON_THRESHOLD);

    var file = file_text_open_write(working_directory + "settings\keybinds.json");
    file_text_write_string(file, json_encode(keybinds));
    file_text_close(file);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set vector graphics AA
draw_enable_swf_aa(true);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create view values
visualSettings = loadJson("settings\visualSettings.json")

if (visualSettings == noone) {
    visualSettings = ds_map_create();

    ds_map_add(visualSettings, "width", display_get_width());
    ds_map_add(visualSettings, "height", display_get_height());

    ds_map_add(visualSettings, "guiScalingX", 1);
    ds_map_add(visualSettings, "guiScalingY", 1);

    var file = file_text_open_write(working_directory + "settings\visualSettings.json");
    file_text_write_string(file, json_encode(visualSettings));
    file_text_close(file);
}

window_set_size(display_get_width(), display_get_height());
surface_resize(application_surface, display_get_width(), display_get_height());

alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy structures

var file = file_text_open_write(working_directory + "settings\keybinds.json");
file_text_write_string(file, json_encode(keybinds));
file_text_close(file);

if (ds_exists(keybinds, ds_type_map)) {
    ds_map_destroy(keybinds);
}

if (ds_exists(visualSettings, ds_type_map)) {
    ds_map_destroy(visualSettings);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>windowCentre();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
