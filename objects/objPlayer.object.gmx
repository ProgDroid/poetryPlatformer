<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>playerWalk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>objCharacter</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// State Machine Init
stateMachineInit();
stateCreate("idle", stateIdle);
stateCreate("walk", stateWalk);
stateCreate("drop", stateDrop);
stateCreate("inCollectionAnimation", stateInCollectionAnimation);

stateInit("idle");

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fix timestep
fixed_timestep_register_script(id, stateExecute);
fixed_timestep_register_script(id, stateUpdate);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Properties

// Movement Properties
grav               = 0.35;
horizontalSpeed    = 0;
verticalSpeed      = 0;
maxHorizontalSpeed = 3;
maxVerticalSpeed   = 8;
acceleration       = 0.4;
slideFactor        = 2;

// for backdash
facingDir = 0;

hp = 5;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controls

//Moving
upHeld       = false;
downHeld     = false;
leftHeld     = false;
rightHeld    = false;
downPressed  = false;
leftPressed  = false;
rightPressed = false;

jumpHeld     = false;
jumpPressed  = false;

playerStart  = false;

gamepadConnected = 0;
numberGamepads = gamepad_get_device_count();

for (var i = 0; i &lt; numberGamepads; i++) {
    if (gamepad_is_connected(i)) {
        gamepadConnected = i;
        break;
    }
}

gamepad_set_axis_deadzone(gamepadConnected, 0.2);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inheritance
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_xview[0]  = 0;
view_yview[0]  = 0;
view_wview[0]  = window_get_width();
view_hview[0]  = window_get_height();
view_object[0] = noone;

flashController.dark   = false;
flashController.active = true;

stateSwitchPrevious();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

// Moving with keyboard
upHeld       = keyboard_check(ord('W')) || (gamepad_axis_value(gamepadConnected, gp_axislv) &lt; 0);
downHeld     = keyboard_check(ord('S')) || (gamepad_axis_value(gamepadConnected, gp_axislv) &gt; 0);
leftHeld     = keyboard_check(ord('A')) || (gamepad_axis_value(gamepadConnected, gp_axislh) &lt; 0);
rightHeld    = keyboard_check(ord('D')) || (gamepad_axis_value(gamepadConnected, gp_axislh) &gt; 0);
downPressed  = keyboard_check_pressed(ord('S')) || (gamepad_axis_value(gamepadConnected, gp_axislv) &gt; 0);
leftPressed  = keyboard_check_pressed(ord('A')) || (gamepad_axis_value(gamepadConnected, gp_axislh) &lt; 0);
rightPressed = keyboard_check_pressed(ord('D')) || (gamepad_axis_value(gamepadConnected, gp_axislh) &gt; 0);

jumpHeld     = keyboard_check(vk_space) || gamepad_button_check(gamepadConnected, gp_face1);
jumpPressed  = keyboard_check_pressed(vk_space) || gamepad_button_check_pressed(gamepadConnected, gp_face1);

playerStart  = keyboard_check_pressed(vk_escape) || gamepad_button_check_pressed(gamepadConnected, gp_start);

// end game
if (playerStart) {
    game_end();
}

if (keyboard_check_pressed(vk_f1)) {
    if (hp != 0) {
        hp -= 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Self

draw_sprite_ext(
    sprite_index,image_index,
    lerp(xprevious,x,global._ts_render_alpha),
    lerp(yprevious,y,global._ts_render_alpha),
    image_xscale,image_yscale,
    image_angle,image_blend,
    image_alpha
);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
